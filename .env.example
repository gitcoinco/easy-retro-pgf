# ----------------------
# DATABASE CONFIGURATION
# ----------------------

# Create a Postgres database: https://vercel.com/dashboard/stores?type=postgres
# You can find the configuration in the `.env.local` tab
POSTGRES_URL=postgres://postgres:postgres@localhost:5432/easy-retro-pgf
POSTGRES_PRISMA_URL=postgres://postgres:postgres@localhost:5432/easy-retro-pgf
POSTGRES_URL_NON_POOLING=postgres://postgres:postgres@localhost:5432/easy-retro-pgf
POSTGRES_USER=postgres
POSTGRES_HOST=localhost
POSTGRES_PASSWORD=postgres
POSTGRES_DATABASE=postgres

# Storage for metadata
# Create a Blob database and get token here: https://vercel.com/dashboard/stores?type=blob
BLOB_READ_WRITE_TOKEN=""

# ------------------
# AUTH CONFIGURATION
# ------------------

# You can generate a new secret on the command line with: `openssl rand -base64 32`
# https://next-auth.js.org/configuration/options#secret
NEXTAUTH_SECRET="secret"

# Domain where your app will be hosted (set to http://localhost:3000 for running locally)
# (if this is not configured correctly, signing the wallet message to sign in will not work)
NEXTAUTH_URL="https://<project_id>.vercel.app"
# NEXTAUTH_URL="http://localhost:3000"



# ---------------------
# NETWORK CONFIGURATION
# ---------------------

# Optional but highly recommended
# Get your key at: https://dashboard.alchemy.com
NEXT_PUBLIC_ALCHEMY_ID=

# WalletConnect (optional to support more wallets)
# Get your projectId at https://cloud.walletconnect.com
NEXT_PUBLIC_WALLETCONNECT_ID=
# NEXT_PUBLIC_WALLETCONNECT_ID="21fef48091f12692cad574a6f7753643" # https://github.com/rainbow-me/rainbowkit/blob/d68813501e40363f76856f7471552c83c08f7606/packages/rainbowkit/src/wallets/getWalletConnectConnector.ts#L73




# -----------------
# APP CONFIGURATION
# -----------------


# What the message will say when you sign in with the wallet
NEXT_PUBLIC_SIGN_STATEMENT="Sign in to EasyRetroPGF"

# Collect user feedback. Is shown as a link when user has voted
NEXT_PUBLIC_FEEDBACK_URL=https://github.com/gitcoinco/easy-retro-pgf/issues/new?title=Feedback


# -----------------
# EAS CONFIGURATION
# -----------------

# Schema for approved applications and voters
# (optional)
NEXT_PUBLIC_APPROVAL_SCHEMA="0x858e0bc94997c072d762d90440966759b57c8bca892d4c9447d2eeb205f14c69"

# Schema for storing metadata refs (projects, lists, profiles, ...)
# (optional)
NEXT_PUBLIC_METADATA_SCHEMA="0xd00c966351896bd3dc37d22017bf1ef23165f859d7546a2aba12a01623dec912"

# Used when creating attestations - change these if you're not on Optimism
# More info here: https://docs.attest.sh/docs/quick--start/contracts
NEXT_PUBLIC_EAS_CONTRACT_ADDRESS="0x4200000000000000000000000000000000000021"
NEXT_PUBLIC_EAS_SCHEMA_REGISTRY_ADDRESS="0x4200000000000000000000000000000000000020"


# -------------------
# Allo2 Configuration
# -------------------
NEXT_PUBLIC_ALLO2_ADDRESS="0x1133eA7Af70876e64665ecD07C0A0476d09465a1"
NEXT_PUBLIC_STRATEGY_ADDRESS="0xa3c5a2ea8ca2060e00761069b23da5171146a747"


# ----------------------
# Advanced Configuration
# ----------------------

# You can register schemas by running the script: npm run eas:registerSchemas
# Do this if the schemas doesn't exist on the network you're using.
WALLET_PRIVATE_KEY=""


NEXT_PUBLIC_POSTHOG_KEY=""
NEXT_PUBLIC_POSTHOG_HOST=https://us.i.posthog.com